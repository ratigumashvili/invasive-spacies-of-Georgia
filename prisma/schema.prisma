generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  NATIVE
  INVASIVE
  ENDEMIC
}

enum Role {
  ADMIN
  RESEARCHER
  USER
}

model Taxonomy {
  id       String   @id @default(uuid())
  name     String   @unique
  rank     Rank
  parentId String?
  parent   Taxonomy? @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children Taxonomy[] @relation("ParentChild")
  species  Species[]
}

enum Rank {
  KINGDOM
  PHYLUM
  CLASS
  ORDER
  FAMILY
  GENUS
  SPECIES
}

model Species {
  id            String   @id @default(uuid())
  scientificName String  @unique
  commonName    String?
  taxonomyId    String
  taxonomy      Taxonomy @relation(fields: [taxonomyId], references: [id])
  status        Status
  habitat       String
  description   String?
  images        Image[]
  impacts       Impact[]
  observations  Observation[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Image {
  id        String   @id @default(uuid())
  speciesId String
  species   Species  @relation(fields: [speciesId], references: [id], onDelete: Cascade)
  url       String
  caption   String?
  createdAt DateTime @default(now())
}

model Impact {
  id          String  @id @default(uuid())
  speciesId   String
  species     Species @relation(fields: [speciesId], references: [id], onDelete: Cascade)
  ecological  String?
  economic    String?
  humanHealth String?
}

model Observation {
  id        String   @id @default(uuid())
  speciesId String
  species   Species  @relation(fields: [speciesId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  location  String
  image     String?
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  role         Role
  observations Observation[]
  createdAt    DateTime      @default(now())
}
